From 8c011e4b3083dc5356347bb7a7f0ea88523b6778 Mon Sep 17 00:00:00 2001
From: Alex Catarineu <alex@cliqz.com>
Date: Fri, 19 Jan 2018 18:51:01 +0100
Subject: [PATCH] emscripten main loop

---
 src/or/main.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/src/or/main.c b/src/or/main.c
index c340e4128..625766caa 100644
--- a/src/or/main.c
+++ b/src/or/main.c
@@ -126,6 +126,11 @@
 #include <systemd/sd-daemon.h>
 #endif /* defined(HAVE_SYSTEMD) */
 
+#ifdef __EMSCRIPTEN__
+#include <emscripten.h>
+static void emscripten_main_loop(void);
+#endif
+
 void evdns_shutdown(int);
 
 /********* PROTOTYPES **********/
@@ -2595,7 +2600,12 @@ do_main_loop(void)
   }
 #endif /* defined(HAVE_SYSTEMD) */
 
+  #ifdef __EMSCRIPTEN__
+  // TODO: why 30?
+  emscripten_set_main_loop(emscripten_main_loop, 100, 1);
+  #else
   return run_main_loop_until_done();
+  #endif
 }
 
 /**
@@ -2628,8 +2638,12 @@ run_main_loop_once(void)
    * an event, or the second ends, or until we have some active linked
    * connections to trigger events for.  Libevent will wait till one
    * of these happens, then run all the appropriate callbacks. */
+  #ifdef __EMSCRIPTEN__
+  loop_result = event_base_loop(tor_libevent_get_base(), EVLOOP_ONCE | EVLOOP_NONBLOCK);
+  #else
   loop_result = event_base_loop(tor_libevent_get_base(),
                                 called_loop_once ? EVLOOP_ONCE : 0);
+  #endif
 
   /* Oh, the loop failed.  That might be an error that we need to
    * catch, but more likely, it's just an interrupted poll() call or something,
@@ -2672,6 +2686,17 @@ run_main_loop_once(void)
   return 1;
 }
 
+#ifdef __EMSCRIPTEN__
+static void
+emscripten_main_loop(void)
+{
+  int ret = run_main_loop_once();
+  if (ret != 1) {
+    // TODO: what should we do here?
+    emscripten_cancel_main_loop();
+  }
+}
+#endif
 /** Run the run_main_loop_once() function until it declares itself done,
  * and return its final return value.
  *
-- 
2.11.0

